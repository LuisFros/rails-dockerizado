version: '2.4'

services:
  app: &app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        RUBY_VERSION: '2.5.5'
        PG_MAJOR: '11'
        NODE_MAJOR: '10'
        YARN_VERSION: '1.13.0'
        BUNDLER_VERSION: '2.0.1'
    image: platanus-dev:1.1.0
    tmpfs:
      - /tmp
    

  backend: &backend
    <<: *app
    stdin_open: true
    tty: true
    volumes:
      - .:/app:cached
      - rails_cache:/app/tmp/cache
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    env_file:
      - .env.development
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy

  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3000:3000'
      - '3002:3002'

  rails:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq

  postgresql:
    image: postgres:11.3
    volumes:
      - postgresql:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
   
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  webpacker:
    <<: *app
    command: ./bin/webpack-dev-server
    ports:
      - '3035:3035'
    volumes:
      - .:/app:cached
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0

volumes:
  postgresql:
  redis:
  bundle:
  node_modules:
  rails_cache:
  packs:
